-- Use the database
\c postgres;

-- Create the schema for race data
CREATE SCHEMA IF NOT EXISTS race_data;

-- Switch to race_data schema
SET search_path TO race_data;

-- Create the countries table
CREATE TABLE IF NOT EXISTS countries (
    country_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

-- Create the drivers table
CREATE TABLE IF NOT EXISTS drivers (
    driver_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    driver_ref VARCHAR(255),
    number INT,
    code VARCHAR(255),
    forename VARCHAR(255) NOT NULL,
    surname VARCHAR(255) NOT NULL,
    dob DATE,
    nationality INT REFERENCES countries(country_id)
);

-- Create the constructors table
CREATE TABLE IF NOT EXISTS constructors (
    constructor_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    country INT REFERENCES countries(country_id)
);

-- Create the status table
CREATE TABLE IF NOT EXISTS status (
    status_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    status VARCHAR(255) NOT NULL
);

-- Create the circuits table
CREATE TABLE IF NOT EXISTS circuits (
    circuit_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    circuit_reference VARCHAR(255),
    name VARCHAR(255) NOT NULL,
    location VARCHAR(255),
    lat FLOAT,
    lng FLOAT
);

-- Create the season table
CREATE TABLE IF NOT EXISTS season (
    season_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    championship_id INT NOT NULL,
    year INT
);

-- Create the championship table
CREATE TABLE IF NOT EXISTS championship (
    championship_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    official_name VARCHAR(255) NOT NULL,
    short_name VARCHAR(255),
    category VARCHAR(255),
    inauguration INT
);

-- Create the races table
CREATE TABLE IF NOT EXISTS events (
    event_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    season_id INT REFERENCES season(season_id),
    race_round INT,
    circuit_id INT REFERENCES circuits(circuit_id),
    official_name VARCHAR(255),
    date DATE
);

-- Create the sessions table
CREATE TABLE IF NOT EXISTS sessions (
    session_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INT NOT NULL REFERENCES events(event_id),
    type VARCHAR(255),
    start_date TIMESTAMP,
    end_date TIMESTAMP,
    gmt_offset TIME
);

-- Create the results table
CREATE TABLE IF NOT EXISTS results (
    result_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id INT REFERENCES events(event_id),
    driver_id INT REFERENCES drivers(driver_id),
    constructor_id INT REFERENCES constructors(constructor_id),
    number INT,
    grid INT,
    position INT,
    points DECIMAL,
    laps INT,
    time VARCHAR(255),
    fastest_lap_time VARCHAR(255),
    rank INT,
    fastest_lap_speed DECIMAL,
    status_id INT REFERENCES status(status_id)
);

-- Insert setup data
-- Set championship
insert into championship (official_name, short_name, category, inauguration) VALUES ('Formula One World Drivers Championship','Formula 1','Open-wheel single-seater Formula auto racing', 1950);

-- populate countries
INSERT INTO countries (name) 
VALUES 
    ('Canada'), 
    ('Austria'), 
    ('United Kingdom'), 
    ('Spain'), 
    ('Belgium'), 
    ('Italy'), 
    ('Russia'), 
    ('Germany'), 
    ('Portugal'), 
    ('Bahrain'), 
    ('Monaco'), 
    ('Azerbaijan'), 
    ('France'), 
    ('Hungary'), 
    ('The Netherlands'), 
    ('Vietnam'), 
    ('United States'), 
    ('Mexico'), 
    ('Saudi Arabia'), 
    ('United Arab Emirates')
ON CONFLICT (name) DO NOTHING;

-- populate season
INSERT INTO season (championship_id, year)
SELECT ch.championship_id, generate_series(ch.inauguration, EXTRACT(YEAR FROM current_date))
FROM championship as ch;


INSERT INTO circuits (circuit_reference, name, location, lat, lng)
SELECT
    circuit_reference,
    name,
    location,
    lat,
    lng
FROM
    (VALUES
        ('Montreal', 'Circuit Gilles-Villeneuve', 'Montreal', 45.506, -73.525),
        ('Melbourne', 'Melbourne Grand Prix Circuit', 'Melbourne', -37.8497, 144.968),
        ('Spielberg', 'Red Bull Ring', 'Spielberg', 47.223, 14.761),
        ('Silverstone', 'Silverstone Circuit', 'Silverstone', 52.072, -1.017),
        ('Barcelona', 'Circuit de Barcelona-Catalunya', 'Montmelo', 41.569, 2.261),
        ('Spa', 'Circuit de Spa-Francorchamps', 'Spa Francorchamps', 50.436, 5.971),
        ('Monza', 'Autodromo Nazionale Monza', 'Monza', 45.621, 9.290),
        ('Sochi', 'Sochi Autodrom', 'Sochi', 43.407, 39.960),
        ('Nurburgring', 'Nürburgring', 'Nürburg', 50.334, 6.943),
        ('Portimao', 'Autódromo Internacional do Algarve', 'Portimão', 37.232, -8.628),
        ('Mugello', 'Autodromo Internazionale del Mugello', 'Scarperia e San Piero', 43.998, 11.372),
        ('Sakhir', 'Bahrain International Circuit', 'Sakhir', 26.031, 50.512),
        ('Imola', 'Autodromo Internazionale Enzo e Dino Ferrari', 'Imola', 44.343, 11.716),
        ('Monaco', 'Circuit de Monaco', 'Monte Carlo', 43.735, 7.421),
        ('Baku', 'Baku City Circuit', 'Baku', 40.372, 49.853),
        ('Paul Ricard', 'Circuit Paul Ricard', 'Le Castellet', 43.251, 5.793),
        ('Hungaroring', 'Hungaroring', 'Mogyorod', 47.581, 19.250),
        ('Zandvoort', 'Circuit Zandvoort', 'Zandvoort', 52.389, 4.541),
        ('Hanoi', 'Hanoi Street Circuit', 'Hanoi', 21.021, 105.843),
        ('Austin', 'Circuit of The Americas', 'Austin', 30.133, -97.641),
        ('Mexico', 'Autódromo Hermanos Rodríguez', 'Mexico City', 19.406, -99.090),
        ('Jeddah', 'Jeddah Street Circuit', 'Jeddah', 21.527, 39.187),
        ('Abu Dhabi', 'Yas Marina Circuit', 'Abu Dhabi', 24.470, 54.603),
        ('Las Vegas', 'Las Vegas Street Circuit', 'Las Vegas', 36.169, -115.136),
        ('Miami', 'Miami International Autodrome', 'Miami', 25.778, -80.202)
    ) AS data (circuit_reference, name, location, lat, lng);